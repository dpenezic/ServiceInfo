@import "../../includes/mixins.less";
@import "../../includes/variables.less";

@side-nav-height: 48px;
@search-item-height: 56px;
@active-item-color: #ee6e73;
@active-item-hover: #e57373;

.side-nav, .side-nav.fixed {
  /*
    Enumeration of possible text areas needing colors.
  */
  height: 100% !important;

  li {
    &.page-active {
      /*
        The .page-active class indicates that a list item's immediate
        contents are the nav link to the current page.

        The text contained in the immediate child links of the list item
        should be white, since it will be on a dark background.
      */
      > a {
        color: white;
      }
    }

    /*
      The same dark background color applies to items on mouseover.
      However, it's necessary to not set the text white on *all* links
      contained in hovering li items; otherwise the text will be set white
      (incorrectly) on li items that contain items that are being hovered
      over. These restricted rules enforce the correct behavior.
    */
    &:hover {
      > a:not(.collapsible-header) {
        color: white;
      }
    }

    &:not(.parent):hover {
      > a {
        color: white;
      }
    }
  }

  .collapsible-body {
    /*
      Similarly, it's not the case that *all* the links under an active list
      item should be white; links beneath the first tier should be black.

      This has cascading effects that require a couple of overrides to fix.
    */
    li.active {
      a {
        color: black;
      }
      li:not(.parent):hover {
        a {
          color: white;
        }
      }
    }
    li.page-active {
      > a {
        color: white;
      }
    }
  }

  .collapsible {
    /*
      The link to the page of a parent page is contained in an .overlay
      container, and the text of that ostensible link is contained in an
      adjacent .collapsible-header element. (This is because the width of the
      .collapsible-header determins the width of the .collapsible-body, so
      it must be as wide as possible, even though it only governs the behavior
      of the button that drops down the menu. Hence it is given the full width
      of the container, and an overlay is placed on top of it.)

      The .collapsible-header is always what gets colored dark on hover and
      has its text set white, but it is not always what is being hovered
      over. Hence the rules under .overlay:hover determine the styling on its
      adjacent element.
    */
    .overlay {
      &:hover {
        & + .collapsible-header {
          color: white;
        }
      }
    }
    .collapsible-header {
      &:hover {
        color: white;
      }
    }
  }

  /*
    Enumeration of possible highlighted regions (either hover or active).

    These rules are closely related to the rules spelled out in comments
    above; for clarification, see those comments.
  */

  li {
    &.active {
      background-color: transparent;
    }

    &:hover {
      background-color: transparent;

     &:not(.no-hover) > a:not(.collapsible-header) {
        background-color: @amber-lighten-2;
      }
    }

    &:hover:not(.parent, .no-hover) {
      background-color: @amber-lighten-2;
      -webkit-transition: all 0.3s ease-out;
      transition: all 0.3s ease-out;
    }

    &.page-active {
      > a {
        background-color: @amber-lighten-2;
      }
    }
  }

  .collapsible {
    .overlay {
      &:hover {
        & + .collapsible-header {
          background-color: @amber-lighten-2;
          -webkit-transition: all 0.3s ease-out;
          transition: all 0.3s ease-out;
        }
      }
    }
    .collapsible-header {
      &:hover {
        background-color: @amber-lighten-2;
        -webkit-transition: all 0.3s ease-out;
        transition: all 0.3s ease-out;
      }
    }
  }

  .collapsible-body {
    li {
      &.active {
        background-color: transparent;
      }
    }
  }

  /*
    General rules.
  */

  li {
    position: relative;

    &.no-padding {
      > a {
        padding: 0.5rem 30px;
      }
    }

    a {
      /*
        Enables transitions on background color and text color for mouseover.
      */
      -webkit-transition: all .3s ease-out;
      transition: all .3s ease-out;
    }

    &:not(.logo) {
      .flex-layout();
      .flex-direction(column);
    }

    form {
      /*
        Correcting for weird form behavior in the nav.
      */
      padding: 0 1rem;

      i {
        line-height: @search-item-height;
      }
      input {
        margin: 0;
        height: @search-item-height;
      }
      .input-field {
        margin: 0;

        input[type=search] ~ .material-icons {
          right: 0.75rem;
        }
      }
      label {
        height: 100%;
        top: 0;
        &.active {
          -webkit-transform: none!important;
          -moz-transform: none!important;
          -ms-transform: none!important;
          transform: none!important;
        }
      }
    }

    .overlay {
      height: 48px;
      position: absolute;
      left: 0;
      top: 0;
      z-index: 2;

      width: 192px;

      .flex-layout();
      .align-items(center);
      a {
        .flex-layout();
        .align-items(center);
        padding-left: 30px;
        width: 100%;
        height: 100%;
        display: inline-flex;
      }
    }

    a {
      min-height: @side-nav-height;
      height: auto;
      line-height: 1.25;
      .flex-layout();
      .flex-direction(row);
      .align-items(center);

      &.collapsible-header {
        &:not(.active) + .collapsible-body .overlay {
          display: none;
        }

        .collapsible-header-wrap {
          .flex-layout();
          .flex-direction(row);
          .align-items(center);
          .justify-content(flex-start);
          .flex(0, 1, 100%);
          flex-basis: 100% !important;

          > span {
            .flex(1, 1, auto);
          }

          i {
            .flex(0, 0, 40px);
            .flex-layout();
            .align-items(center);
            .justify-content(flex-start-rtl);
            width: 48px;
          }
        }
        padding: 0.5rem 0 0.5rem 30px;
        &.has_icon {
          // icon looks better slightly displaced to the left
          padding: 0.5rem 0 0.5rem 30px;
        }
        width: 100%;
        box-sizing: border-box;
        margin: 0;
        i {
          margin-right: 0;
        }
      }
    }

  }

  .collapsible {
    /*
      The many levels of embedding call for many levels of manual width
      adjustments on absolute-positioned elements.
    */
    .overlay {
      width: 192px;
    }
    .collapsible {
      .overlay {
        width: 184px;
      }
      .collapsible {
        .overlay {
          width: 176px;
        }
        .collapsible {
          .overlay {
            width: 168px;
          }
        }
      }
    }
  }

  .collapsible-body {
    border-left: 3px solid rgba(0,0,0,0.15)!important;
    margin-left: 5px;

    .overlay {
      a {
        padding: 0 0 0 15px;
      }
    }

    li {
      a, a.collapsible-header {
        margin: 0;
      }
      .overlay {
        a {
          margin: 0;
        }
      }
    }

    > ul > li.has_icon > a {
      // visual adjustment for icons on non-parent child list item
      padding: 0 30px 0 30px;
    }
  }
}
