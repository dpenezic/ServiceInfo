.padded-box(@color, @bg-color, @border-color) {
    border: 1px solid @border-color;
    border-radius: 4px;

    background-color: @bg-color;

    color: @color;
    & > a { color: @color; }
    font-weight: 600;

    text-align: center;
    padding: 13px 12px;
}

.button-like(@color, @bg-color, @border-color,
             @hover-color, @hover-bg-color, @hover-border-color,
             @inactive-color, @inactive-bg-color, @inactive-border-color) {
    .padded-box(@color, @bg-color, @border-color);
    transition: all 0.25s;
    &:hover {
        transition: all 0.25s;
        color: @hover-color;
        & > a { color: @hover-color; }
        border-color: @hover-border-color;
        background-color: @hover-bg-color;
    }
    &.inactive, &.inactive:hover {
        .padded-box(@inactive-color, @inactive-bg-color, @inactive-border-color);
    }

    a, a:hover {
        text-decoration: none;
        border-bottom: none;
    }
}

.green-bg() {
    .padded-box(white, #3cb879, #3CB879);
}

.white-green-button() {
    .button-like(
        #3cb879, white, #3cb879,
        white, #3cb879, #3CB879,
        darkgrey, white, darkgrey
    );
}

/*
    Mixins for flexbox
*/
.flex-layout {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;

    > * {
        .flex(0, 1, auto);
    }
}

.flex-column {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
        flex-direction: column;
}
.flex (@grow, @shrink, @basis) {
    -webkit-box-flex: @grow;
    -webkit-flex: @grow @shrink @basis;
        -ms-flex: @grow @shrink @basis;
            flex: @grow @shrink @basis;
}
.align-items (@align) when (@align = flex-end) {
    -webkit-box-align:end;
    -webkit-align-items:@align;
        -ms-flex-align:end;
            align-items:@align;
}
.align-items (@align) when (@align = flex-start) {
    -webkit-box-align:start;
    -webkit-align-items:@align;
        -ms-flex-align:start;
            align-items:@align;
}
.align-items (@align) {
    -webkit-box-align:@align;
    -webkit-align-items:@align;
        -ms-flex-align:@align;
            align-items:@align;
}
.align-content (@align) when (@align = flex-start) {
    -ms-flex-line-pack: start;
    -webkit-align-content: @align;
    -moz-align-content: @align;
    align-content: @align;
}
.align-content (@align) when (@align = flex-end) {
    -ms-flex-line-pack: end;
    -webkit-align-content: @align;
    -moz-align-content: @align;
    align-content: @align;
}
.align-content (@align) {
    -webkit-align-content: @align;
    -moz-align-content: @align;
    -ms-flex-line-pack: @align;
    align-content: @align;
}
.justify-content (@justify) when (@justify = flex-start) {
    -webkit-box-pack: start;
    -webkit-justify-content: @justify;
        -ms-flex-pack: start;
            justify-content: @justify;
}
.justify-content (@justify) when (@justify = flex-end) {
    -webkit-box-pack: end;
    -webkit-justify-content: @justify;
        -ms-flex-pack: end;
            justify-content: @justify;
}
.justify-content (@justify) when (@justify = space-between) {
    -webkit-box-pack: justify;
    -webkit-justify-content: @justify;
        -ms-flex-pack: justify;
            justify-content: @justify;
}
.justify-content (@justify) when (@justify = space-around) {
    -webkit-box-pack: @justify;
    -webkit-justify-content: @justify;
        -ms-flex-pack: distribute;
            justify-content: @justify;
}
.justify-content (@justify) {
    -webkit-box-pack: @justify;
    -webkit-justify-content: @justify;
        -ms-flex-pack: @justify;
            justify-content: @justify;
}
.flex-direction (@direction) when (@direction = column) {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: @direction;
        -ms-flex-direction: @direction;
            flex-direction: @direction;
}
.flex-direction (@direction) when (@direction = row-reverse) {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: reverse;
    -webkit-flex-direction: @direction;
        -ms-flex-direction: @direction;
            flex-direction: @direction;
}
.flex-direction (@direction) when (@direction = column-reverse) {
    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;
    -webkit-flex-direction: @direction;
        -ms-flex-direction: @direction;
            flex-direction: @direction;
}
.flex-direction (@direction) {
    -webkit-box-orient: @direction;
    -webkit-box-direction: @direction;
    -webkit-flex-direction: @direction;
        -ms-flex-direction: @direction;
            flex-direction: @direction;
}
.flex-wrap (@wrap) when (@wrap = nowrap) {
    -ms-flex-wrap: none;
    -webkit-flex-wrap: @wrap;
    -moz-flex-wrap: @wrap;
    flex-wrap: @wrap;
}
.flex-wrap (@wrap) {
    -ms-flex-wrap: @wrap;
    -webkit-flex-wrap: @wrap;
    -moz-flex-wrap: @wrap;
    flex-wrap: @wrap;
}
